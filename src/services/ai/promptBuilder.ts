
import { TaskContext } from '@/utils/taskContext';

/**
 * AI Prompt Builder
 * Constructs optimized prompts for consistent AI responses
 */

export function buildTaskAnalysisPrompt(context: TaskContext): { systemPrompt: string; userPrompt: string } {
  const systemPrompt = `Eres un asistente que √öNICAMENTE responde en JSON v√°lido sin excepci√≥n.

FORMATO REQUERIDO (copia exactamente esta estructura):
{
  "statusSummary": "An√°lisis del estado actual en m√°ximo 150 palabras",
  "nextSteps": "Pasos espec√≠ficos a seguir en m√°ximo 100 palabras",
  "alerts": "Alertas cr√≠ticas solo si hay riesgos reales",
  "insights": "An√°lisis predictivo y recomendaciones estrat√©gicas",
  "riskLevel": "low",
  "intelligentActions": [
    {
      "type": "create_subtask",
      "label": "Texto del bot√≥n m√°ximo 25 chars",
      "priority": "high",
      "confidence": 0.8,
      "suggestedData": {
        "title": "T√≠tulo sugerido",
        "content": "Contenido detallado",
        "scheduledFor": "2024-12-25T10:00:00.000Z",
        "language": "es",
        "estimatedDuration": 30
      }
    }
  ]
}

üö® REGLAS CR√çTICAS - NO VIOLAR NUNCA:
1. Respuesta SOLO JSON, sin texto antes ni despu√©s
2. Usar √öNICAMENTE comillas dobles (")
3. NO usar comillas simples (')
4. NO dejar strings sin terminar
5. NO poner comas despu√©s del √∫ltimo elemento
6. NO usar comentarios (//)
7. NO usar markdown (\`\`\`json)
8. NO a√±adir explicaciones
9. Cerrar todas las comillas que abras
10. Temperatura fijada en 0.0 para m√°xima consistencia

VALORES PERMITIDOS:
- riskLevel: "low", "medium", "high"
- type: "create_subtask", "create_reminder", "draft_email"
- priority: "high", "medium", "low"
- language: "es", "en"

‚úÖ EJEMPLO DE RESPUESTA CORRECTA:
{"statusSummary":"Tarea en progreso con 7 subtareas","nextSteps":"Completar env√≠os pendientes","riskLevel":"low","intelligentActions":[]}

üö´ NUNCA HAGAS ESTO:
- Texto antes: "Aqu√≠ est√° el an√°lisis: {"statusSummary":...
- Markdown: \`\`\`json {"statusSummary":...
- Comillas simples: {'statusSummary':'...
- Strings sin cerrar: {"statusSummary":"texto sin cerrar
- Comas finales: {"statusSummary":"texto", "nextSteps":"pasos",}
- Comentarios: {"statusSummary":"texto", // comentario

RESPONDE SOLO CON EL JSON. NO AGREGUES TEXTO ANTES O DESPU√âS.`;

  const userPrompt = `TAREA PRINCIPAL:
T√≠tulo: ${context.mainTask.title}
Descripci√≥n: ${context.mainTask.description || 'Sin descripci√≥n'}
Estado: ${context.mainTask.status}
Prioridad: ${context.mainTask.priority}
Fecha l√≠mite: ${context.mainTask.due_date || 'Sin fecha l√≠mite'}

PROGRESO GENERAL:
${context.completionStatus.overallProgress}% completado
Subtareas completadas: ${context.completionStatus.completedSubtasks}/${context.completionStatus.totalSubtasks}
Microtareas completadas: ${context.completionStatus.completedMicrotasks}/${context.completionStatus.totalMicrotasks}

ACTIVIDAD RECIENTE:
${context.recentLogs.slice(0, 5).map(log => 
  `- ${log.log_type}: ${log.title} (${new Date(log.created_at).toLocaleDateString()})`
).join('\n')}

DEPENDENCIAS:
Bloqueantes: ${context.dependencies.blocking.length}
Dependientes: ${context.dependencies.dependent.length}

CONTEXTO DEL PROYECTO:
${context.projectContext?.name || 'Sin proyecto'} - Estado: ${context.projectContext?.status || 'N/A'}

Genera an√°lisis en JSON:`;

  return { systemPrompt, userPrompt };
}
